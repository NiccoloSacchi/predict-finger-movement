L119547037146038801333356L
.L1001L
.(dp0
Vprotocol_version
p1
L1001L
sVlittle_endian
p2
I01
sVtype_sizes
p3
(dp4
Vshort
p5
L2L
sVint
p6
L4L
sVlong
p7
L4L
ss.(dp0
Vnb_layers
p1
L4L
sVnb_hidden
p2
L40L
sVactivation
p3
P('module', <class 'torch.nn.modules.activation.Tanh'>, '/home/sacchi/anaconda3/lib/python3.6/site-packages/torch/nn/modules/activation.py', 'class Tanh(Module):\n    r"""Applies element-wise,\n    :math:`\\text{Tanh}(x) = \\tanh(x) = \\frac{e^x - e^{-x}} {e^x + e^{-x}}`\n\n    Shape:\n        - Input: :math:`(N, *)` where `*` means, any number of additional\n          dimensions\n        - Output: :math:`(N, *)`, same shape as the input\n\n    .. image:: scripts/activation_images/Tanh.png\n\n    Examples::\n\n        >>> m = nn.Tanh()\n        >>> input = torch.randn(2)\n        >>> output = m(input)\n    """\n\n    def forward(self, input):\n        return torch.tanh(input)\n')
sVweight_decay
p4
F0.04978706836786395
sVdropout
p5
F0.3
sVoptimizer
p6
ctorch.optim.adamax
Adamax
p7
s.(lp0
.